10 MILLION MINES PROJECT DESIGN AND NOTES

Stack:
- HTML/CSS/JS
- API / And SSE event endpoint in Crystal

- Find out how many 'cells' I can render in the dom
    - 10 million chars (UPDATE: went with chars not pixels)
    - 10 million pixels 
    - probably not individual elements
        (have to have events, though)
        what do you assign listeners to?

        UPDATE: Using span elements containing strings of "#" chars

- A 'cell' can be empty, have a mine, or some other item(s)?

- On click -> send a coordinate that is associated directly
              with a DB -> table -> row -> cell 

--------------------------------------------------------------
            -> query UPDATE
            -> TRIGGERS SSE of updated cell location in DOM to all connections
            
            NOTE: If there were 1000 spans each with 
                  100 whitespace chars = 100,000

                  10,000 spans @ 100 wide == 1m (UPDATE: still thinking about this)

DOM
  - So far using 100 spans with 100 pre elements (UPDATE: am using the 100 char strings mentioned on next line)
    but would like to use just 100 char strings,
    which limits dom access and traversal and styling..etc.
    But I don't want to render or use 10 Million elements
    (UPDATE: This appraoch and DOM stuff is a WIP and still exploring options)

    SOOOOO... go to try to use Highlighted text as choosing
    a cell.. this could get very interesting.. (UPDATE: I dide this and it works and is awesome!)

Okay... 10,000 pre elements is fine.. browser wants to crash
        at unresponsive script at 10x at 100k pre elements...
        YEP..so no go on 100k html elements

------
getSelection...etc NOTES
-----------------
// getSelection
// getSelection.baseNode.parentElement => 
        // will reference the row span,
        // which coontains the row ID

        // 25th row
        // selction.achorOffset is the start 
        // selection.focusOffset is end

// What if only cells within a row may be highlighted and cleared
// And as a group rows get cleared and eliminated
// Or something like only 2 or 3 may be cleared at a time
// Maybe there's a delay before you may clear your next
// cell or set of cells

--------------------------------------------------------
CRUCIAL CONSIDERATION FOR THE AESTHTICS OF THE GAME
because I'll be to attach gameplay functionality, style, 
events, etc to individual cells 
-----------------------------------------------------
There may be a need to then inject a <pre> element
at the index of the highlighted text.. attach functionality/event
listeners, and then apply changes in reverse back to the original
string and remove the injected <pre>

Do I create a <pre> row id with index, assign pre id and 
lass in order to alter via CSS?
--------------------------------------------------------------

----------------
Front End Flow
---------------
The back end should provide a singular static game of
the mine layout. Pressing begin should load that data
calling init on the game and loading the game.

Highlighting a char, while there will be options of actions to take 
when highlighting a char, for now a cell will simply be revealed..
    - Is it a mine or not
    - If mine, lose.. I don't know what that entails yet
    - Reveal state, alter char, update data
- First: function to change text that is selected [D O N E :)]

// Keeping cell state if uncovered or not using a negative cell coord..
----------------------------------------------------------------------------
Row 1, Cell 50, becomes -50...or column 50 of the row becomes "X,Y,Z" State
- This is for representing state in the database. A negative number can represent
an exposed mine.. but we still know that it is cell 50...or using decimal..
multiple states may be represented using the single index, eg: 
50.1 is an exposed mine, 50.2: clear 50.3: has mine diffusion pack...etc
SO...Cn still query and update tables with a single row index and specific column


WOULD BE COOL If
----------------
player clears a spot and may pick up mine difussion kits, if not, booom

----------------------------
NOTES pulled from comments on day 2/3 of dev:
-----------------------------------------------
// NOW: 
// when user selects a cell, check if that row and cell is a mine
// NOTE: Due to having a 2 integer array for every mine, meaning potentially
// 2 million arrays in one array, it may be best to have an enclosing array
// or structure for every row in the field, instead of searching the whole game field.
// All I need to search is an array for a single row...
// meaning, I am already representing the mines wrong, but this is just the front
// end POC test part and the mine data will come from the server but it still
// makes sense to have an array for each row -> 1000 rows.. but then each row would 
// need  10k chars, which means 10k at mine density of 20% would be 2,000 members
// per row
------------------------------------------------------------------------------

// Stats at top: mines cleared, mines exploded, mines left...etc.

// BACKBURNER TASK:
    // Buid in auto simulation of users and games,
    // particularly for end to end / load tests on SSE server

// Ridiculous idea:
Insert spans around Mine chars for styling, but strip them
when parsing and to maintain order of the mine vs empty map of the game field,
and then put them back again???

document.documentElement.style.setProperty("--highlight-color", color);

From bennettfreely.com/clippy

CSS clip-path maker patterns I made:
--------
clip-path: polygon(0 0, 53% 49%, 96% 57%, 0 100%, 74% 92%, 100% 74%, 0 54%, 100% 1%);

AUG 10th STATUS NOTES:
--------------------------

TODAY:
- Review where I'm at
- Define next steps
- Make coffee
- Do next steps

NEXT STEPS
-----------
- call game init when begin button is clicked
  but this will actually load current game data/state [DONE]

- think about moving current mine gen stuff
to an object just for dev/testing...Make it
switchable between using the server generated game
and client generated...for dev..

- Do some sanity checks on large string/rowSize operation
in order to help determine how large is maybe too large..
For instance, we probably don't want 10,000 span elements.. [DONE BUT TO BE CONTINUUED]
---------------------------------------------

- consider UI / basic stats and basic menu 
earlier than later so they're there [DONE]
  - hide begin and welcome to the field [DONE]
  - put absolute positioned stats box at top [DONE]

- Build the SSE server and field update 
endpoint with a single DB / limited mine density
of 20% and 10,000 'field cells'

---------------------------------------
Notes form initial sanity checks:

// on string, array, and array of objects size vs performance
//------------------------
// NOTE: See info at bottom on SQLite max columns
// So far, it seems reasonable to do what I want
// to do with 10,000 char strings, but this should
// probably stay within the 2000 column SQLite default limit.
// This means 5,000 rows (spans) <- which I don't like
// containing 2,000 char strings for 10 million

// 10 Databases, 100 tables each = 1000 tables
// 1000 tables @ 1000 rows @ 10 columns = 10 million 'cells'

// 1000 tables @ 100 rows each @ 100 columns == 10 million cells

------------------------------
gameplay notes - Aug 12

- Player clicks mine, has diffusion kits, they may diffuse or
choose to step off of mine with a 50% chance of it exploding.
- If it explodes, either game over or lose a life
- If lives are used, they can build up diffusion kits


NEXT:
- Step off logic, more UI / design, animations, aesthetics
- server

SERVER DESIGN & IMPLEMENTATION
------------------------------
I should be able to get by without using a Crystal web framework.
(update, going to use Kemal, for now until I write my own SSE stuff,
because I already have a prior service using SSE and Kemal)

- Need an update endpoint
- A SSE connections / management service
- SQLite DB driver
- Setup and use Locust for load/perf testing
    - this also provides stats and logs

- Crystal/Kemal
  -- Crystal game generator
  -- Crystal SQL Service layer < - > eg: updates trigger new broadcasts
  -- Endpoint for field updates (Websockets)
  -- Broadcasts are SSE
  -- Recent updates cache/log of changed cells so we don't repeat updates
  -- How to check active open  SSE events
  -- How to pool user connections and broadcast
  -- Game Generation

  Client:
    -- May end up with a second JS file while keeping the old one
    for client only gameplay and dev/testingcre

